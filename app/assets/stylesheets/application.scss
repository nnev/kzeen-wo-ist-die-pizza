/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

@import "bootstrap";

// product add modal
.size-selector {
  padding: 5px;

  &:nth-child(even) {
    background: #fafafa;
  }
}

select.form-control + select.form-control {
  margin-top: 5px;
}

.ingred-columns {
  column-width: 11em;
  column-gap: 2em;

  .form-check:nth-child(even) {
    background: #fafafa;
  }
}

.form-check-label {
  width: 100%;
}

.hidden {
  display: none;
}

// this allows smooth scrolling on the modal windows on iOS. They say this breaks
// scrolling there, but I can't reproduce it. Both webkit's and boostrap's bugs
// are still open at the time of writing: https://github.com/twbs/bootstrap/issues/17695
.modal {
  -webkit-overflow-scrolling: touch;
}



th {
  padding-top: 2rem !important;
  font-size: 20px;
  line-height: 2rem;

  small {
    float: right;
    font-size: 64%;
  }
}

// generic
.price {
  white-space: nowrap;
}

// menu
.sidemenu {
  ul {
    padding-top: $spacer * 2.05;
  }

  .nav-link {
    padding: 0.25rem 0.5rem;
  }
}

.topmenu {
  .dropdown-menu {
    // save a bit of space from the default 8px
    padding-top: 6px;
    padding-bottom: 6px;
  }

  .dropdown-item {
    // save a bit of space from the default 4px
    padding-top: 3px;
    padding-bottom: 3px;
  }

  // Not the whole menu will fit on small screens, e.g. landscape phones. Normally
  // the menu becomes fixed to the page, but since the menu is already stickied to
  // the top this makes no sense. The user now has to scroll the page to the very
  // top to see the menu at all. We just forcibly disable the scroll change magic
  // and live with the menu being cut off.
  &.fixed-top .dropdown-menu {
    position: fixed !important;
    transform: none !important;
    will-change: unset !important;
  }
}

// product table

.product-list table tbody tr:first-child th {
  border-top: 0;
}

// remove whitespace on phones to make the table as wide as the body
@include media-breakpoint-down(sm) {
  .row .col-sm {
    padding: 0;
  }
}


// sidebar basket
.col-md-3 #basket {
  // hack to make the anchor work nicely with a sticky header on mobile
  margin-top: $spacer * -4;
  padding-top: $spacer * 4;
  // set correct spacing for larger screens
  @include media-breakpoint-up(md) {
    padding-top: $spacer * 1.7;
    margin-top: 0;
  }

  padding-bottom: $spacer;

  h3 {
    margin-bottom: $spacer * 0.2;

    span {
      font-weight: normal;
      float: right;
    }
  }

  small {
    display: block;
  }

  > ul {
    list-style-type: none;
    padding-left: 0;

    > li {
      margin-top: $spacer;
      cursor: pointer;

      span {
        float: right;
        font-weight: normal;
      }
    }

    ol, ul {
      font-size: 80%;
      padding-left: $spacer * 1.5;
    }
  }

}

// allow better placement when clicking anchors
.move-up {
  position: relative;
  top: -4rem;
}

// no idea why not there by default??
.disabled {
  pointer-events: none;
}
